<idea-plugin>
    <id>com.bruce.intellijplugin.generatesetter</id>
    <name>GenerateAllSetter</name>
    <vendor email="gejun123456@gmail.com" url="https://github.com/gejun123456/intellij-generateAllSetMethod">bruceGe</vendor>
    <description><![CDATA[

    <p><a href="https://github.com/gejun123456/intellij-generateAllSetMethod">GitHub</a>
      |&nbsp<a href="https://github.com/gejun123456/intellij-generateAllSetMethod/issues">Issues</a>
        |&nbsp<a href="https://www.bilibili.com/video/BV11o4y1P7V7">bilibili</a></p>
      <p> 一键调用一个对象的所有的set方法,get方法等</p>
      <p>在方法上生成两个对象的转换</p>
      <br/>
      <p><b>Features</b></p>
      <ul>
          <li>generate all setters by pressing Alt+Enter on the variable's class</li>
          <li>generate all setters with default values for most types including List, Set and Map</li>
          <li>generate a converter between two classes that have matching fields</li>
          <li>generate assertThat calls for all getter methods</li>
      </ul>

      <p><b>Usage</b></p>
      <p>Let some class User has setName and setPassword methods and you have a declaration:<br/>
      <div style="margin: 10px">
        <code>User user = <b>new</b> User();</code>
      </div>
      Set the caret to the word User and press Alt+Enter key. The plugin will produce the code:</p>
      <div style="margin: 10px">
          <code>
              user.setName("");<br/>
              user.setPassword("");<br/>
          </code>
      </div>

      <p>Works with Java and Kotlin programming languages.</p>
      <p>View more on <a href ="https://github.com/gejun123456/intellij-generateAllSetMethod">https://github.com/gejun123456/intellij-generateAllSetMethod</a></p>
    ]]></description>

    <change-notes><![CDATA[
        <strong>2.8.5</strong>
        <ul>
            <li>[FIX]Fix assertj test engine detect defect</li>
            <li>[NEW]Add generate setter getter converter from variable support</li>
            <li>[IMPROVE]Optimize the indentation method</li>
            <li>[IMPROVE]Add npe judge in method convert</li>
        </ul>
        <strong>2.8.4</strong>
        <ul>
            <li>[NEW]Test engines support: AssertJ, JUnit 4/5, TestNG, JDK assert with auto-detection</li>
            <li>[NEW]Option to disable guava code generation. + splitter in preferences dialog</li>
            <li>Thanks <a href="https://github.com/hza">hza</a> for the contribution</li>
        </ul>
        <strong>2.8.3</strong>
        <ul>
            <li>[FIX]Must not start write action from within read action in the other thread - deadlock is coming</li>
        </ul>
        <strong>2.8.2</strong>
        <ul>
            <li>[FIX]fix document null exception</li>
        </ul>
        <strong>2.8.1</strong>
        <ul>
            <li>[NEW]support groovy</li>
            <li>[IMPROVE]better builder support</li>
            <li>[NEW]support accessor chain</li>
        </ul>
    <strong>2.8</strong>
        <ul>
            <li>[FIX]fix exception in 2021.2</li>
        </ul>
        <strong>2.7</strong>
        <ul>
            <li>[FIX]fix intention action text</li>
            <li>[NEW]enum type support</li>
        </ul>
        <strong>2.6</strong>
        <ul>
            <li>[NEW]support lombok builder using with(Thanks https://github.com/axesipov)</li>
        </ul>
        <strong>2.5</strong>
        <ul>
            <li>[NEW]compatible for 2020 version</li>
        </ul>
        <strong>2.4</strong>
        <ul>
            <li>[FIX]fix Generate from method getter setter converter not work</li>
        </ul>
        <strong>2.3</strong>
        <ul>
            <li>[FIX]fix null pointer</li>
        </ul>
        <strong>2.2</strong>
        <ul>
            <li>[NEW]add generate with all setter no default value</li>
            <li>[NEW]add generate assert all getter</li>
        </ul>
        <strong>2.1</strong>
        <ul>
            <li>[NEW]add base support for kotlin</li>
            <li>[IMPROVE]generate all setter name to Generate all setter</li>
            <li>[IMPROVE]add space in new operator</li>
        </ul>
        <strong>1.9</strong>
        <ul>
            <li>[IMPROVE]maps import and add default value for some package</li>
        </ul>

        <strong>1.8</strong>
        <ul>
            <li>[IMPROVE]support byte type</li>
        </ul>

        <strong>1.7</strong>
        <ul>
            <li>[NEW]support two list convert</li>
        </ul>

        <strong>1.6</strong>
        <ul>
            <li>[FIX]fix exception when the cursor on constructor method</li>
        </ul>

        <strong>1.5</strong>
        <ul>
            <li>[NEW]generate default value for returnType is List Set Map</li>
        </ul>

        <strong>1.4</strong>
        <ul>
            <li>[NEW]could use on method, and if method parameter contain same value, then will pass to it</li>
        </ul>

        <strong>1.3</strong>
        <ul>
            <li>[FIX]fix doc</li>
        </ul>


        <strong>1.2</strong>
        <ul>
            <li>[NEW]fix doc</li>
            <li>[FIX]fix suffix for long and double</li>
        </ul>

        <strong>1.1</strong>
        <ul>
            <li>[NEW]auto add import to class</li>
        </ul>
    ]]>
    </change-notes>

    <idea-version since-build="183"/>

    <depends>com.intellij.modules.java</depends>

    <depends optional="true" config-file="plugin-kotlin.xml">org.jetbrains.kotlin</depends>

    <depends optional="true" config-file="plugin-groovy.xml">org.intellij.groovy</depends>

    <extensions defaultExtensionNs="com.intellij">
        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateAllSetterAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateWithBuilderAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateWithAccessorsAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateAllSetterNoDefaultValueAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateBuilderGetterFromFunctionAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateSetterGetterFromVariable</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.AssertNotNullAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.AssertAllGetterAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateSetterGetterFromFunctionAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <intentionAction>
            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateAllGetterAction</className>
            <category>GenerateAllSetter</category>
        </intentionAction>

        <applicationService serviceImplementation="com.bruce.intellijplugin.generatesetter.template.GenerateSetterService"/>

        <applicationConfigurable instance="com.bruce.intellijplugin.generatesetter.template.MySettings"/>
        <!--        <intentionAction>-->
        <!--            <className>com.bruce.intellijplugin.generatesetter.actions.GenerateByTemplateAction</className>-->
        <!--        </intentionAction>-->
    </extensions>
</idea-plugin>
